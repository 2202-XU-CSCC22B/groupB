{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-312a04dd\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"success-message\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.passes, pass => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: pass.id\n    }, [_createElementVNode(\"div\", null, _toDisplayString(pass.id), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(pass.remarks), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(pass.nature), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(pass.done), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.checkApproval(pass)\n    }, \"Check Approval\", 8 /* PROPS */, _hoisted_1), $data.approvalStatus ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.approvalStatus), 1 /* TEXT */)) : $data.unapprovedItems.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" Pass is not fully approved. Unapproved items: \" + _toDisplayString($data.unapprovedItems.join(\", \")), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_renderList","$data","passes","pass","key","id","_createElementVNode","_toDisplayString","remarks","nature","done","onClick","$event","$options","checkApproval","_hoisted_1","approvalStatus","_hoisted_2","unapprovedItems","length","_hoisted_3","join"],"sources":["/home/vagrant/sites/ppc/src/pass_appr/PassApproval.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"pass in passes\" :key=\"pass.id\">\n      <div>{{ pass.id }}</div>\n      <div>{{ pass.remarks }}</div>\n      <div>{{ pass.nature }}</div>\n      <div>{{ pass.done }}</div>\n      <button @click=\"checkApproval(pass)\">Check Approval</button>\n      <div v-if=\"approvalStatus\" class=\"success-message\">{{ approvalStatus }}</div>\n      <div v-else-if=\"unapprovedItems.length > 0\" class=\"error-message\">\n        Pass is not fully approved. Unapproved items: {{ unapprovedItems.join(\", \") }}\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport axinst from '@/../server/axios-config.js';\n\nexport default {\nname: 'PassApproval',\ndata() {\n  return {\n    passId: 'your-pass-id',\n    approvalStatus: '',\n    unapprovedItems: [],\n    passes: []  // Add a new data property for storing passes\n  };\n},\nmethods: {\n  checkApproval(pass) {\n    axinst.get(`/check_approval/${pass._id}`)\n      .then(response => {\n        if (response.data.message === 'The pass is approved') {\n          this.approvalStatus = response.data.message;\n          this.unapprovedItems = [];\n\n        } else if (response.data.message === 'The pass is not fully approved') {\n          this.approvalStatus = '';\n          this.unapprovedItems = response.data.unapprovedItems;\n\n        } else {\n          this.approvalStatus = '';\n          this.unapprovedItems = [];\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        this.approvalStatus = '';\n        this.unapprovedItems = [];\n      });\n  },\n  getAllPasses() {\n    axinst.get('/passes') // Make a request to fetch all passes\n      .then(response => {\n        this.passes = response.data; // Store the passes in the data property\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n},\ncreated() {\n    this.getAllPasses(); // Call the method to fetch all passes when the component is created\n  }\n}\n</script>\n\n<style scoped>\n.success-message {\n  color: green;\n}\n\n.error-message {\n  color: red;\n}\n</style>\n\n\n<style scoped>\n\n</style>\n\n"],"mappings":";;;;;EAQiCA,KAAK,EAAC;;;;EACWA,KAAK,EAAC;;;uBARtDC,mBAAA,CAYM,e,kBAXJA,mBAAA,CAUMC,SAAA,QAAAC,WAAA,CAVcC,KAAA,CAAAC,MAAM,EAAdC,IAAI;yBAAhBL,mBAAA,CAUM;MAVuBM,GAAG,EAAED,IAAI,CAACE;QACrCC,mBAAA,CAAwB,aAAAC,gBAAA,CAAhBJ,IAAI,CAACE,EAAE,kBACfC,mBAAA,CAA6B,aAAAC,gBAAA,CAArBJ,IAAI,CAACK,OAAO,kBACpBF,mBAAA,CAA4B,aAAAC,gBAAA,CAApBJ,IAAI,CAACM,MAAM,kBACnBH,mBAAA,CAA0B,aAAAC,gBAAA,CAAlBJ,IAAI,CAACO,IAAI,kBACjBJ,mBAAA,CAA4D;MAAnDK,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,aAAa,CAACX,IAAI;OAAG,gBAAc,iBAAAY,UAAA,GACxCd,KAAA,CAAAe,cAAc,I,cAAzBlB,mBAAA,CAA6E,OAA7EmB,UAA6E,EAAAV,gBAAA,CAAvBN,KAAA,CAAAe,cAAc,oBACpDf,KAAA,CAAAiB,eAAe,CAACC,MAAM,Q,cAAtCrB,mBAAA,CAEM,OAFNsB,UAEM,EAF4D,iDAClB,GAAAb,gBAAA,CAAGN,KAAA,CAAAiB,eAAe,CAACG,IAAI,0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
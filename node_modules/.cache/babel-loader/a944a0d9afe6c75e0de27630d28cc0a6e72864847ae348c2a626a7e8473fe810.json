{"ast":null,"code":"import axinst from '@/../server/axios-config.js';\nexport default {\n  name: 'PassApproval',\n  data() {\n    return {\n      passId: 'your-pass-id',\n      approvalStatus: '',\n      unapprovedItems: [],\n      passes: [] // Add a new data property for storing passes\n    };\n  },\n\n  methods: {\n    checkApproval(pass) {\n      axinst.get(`/check_approval/${pass._id}`).then(response => {\n        if (response.data.message === 'The pass is approved') {\n          this.approvalStatus = response.data.message;\n          this.unapprovedItems = [];\n        } else if (response.data.message === 'The pass is not fully approved') {\n          this.approvalStatus = '';\n          this.unapprovedItems = response.data.unapprovedItems;\n        } else {\n          this.approvalStatus = '';\n          this.unapprovedItems = [];\n        }\n      }).catch(error => {\n        console.log(error);\n        this.approvalStatus = '';\n        this.unapprovedItems = [];\n      });\n    },\n    getAllPasses() {\n      axinst.get('/passes') // Make a request to fetch all passes\n      .then(response => {\n        this.passes = response.data; // Store the passes in the data property\n        this.passes.forEach(pass => {\n          this.checkApproval(pass);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  created() {\n    this.getAllPasses(); // Call the method to fetch all passes when the component is created\n  }\n};","map":{"version":3,"names":["axinst","name","data","passId","approvalStatus","unapprovedItems","passes","methods","checkApproval","pass","get","_id","then","response","message","catch","error","console","log","getAllPasses","forEach","created"],"sources":["/home/vagrant/sites/ppc/src/pass_appr/PassApproval.vue"],"sourcesContent":["<template>\n  <div>\n    <div v-for=\"pass in passes\" :key=\"pass.id\">\n      <div>{{ pass.id }}</div>\n      <div>{{ pass.remarks }}</div>\n      <div>{{ pass.nature }}</div>\n      <div>{{ pass.done }}</div>\n      <div v-if=\"pass.approvalStatus\" class=\"success-message\">{{ pass.approvalStatus }}</div>\n      <div v-else-if=\"pass.unapprovedItems.length > 0\" class=\"error-message\">\n        Pass is not fully approved. Unapproved items: {{ pass.unapprovedItems.join(\", \") }}\n      </div>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nimport axinst from '@/../server/axios-config.js';\n\nexport default {\nname: 'PassApproval',\ndata() {\n  return {\n    passId: 'your-pass-id',\n    approvalStatus: '',\n    unapprovedItems: [],\n    passes: []  // Add a new data property for storing passes\n  };\n},\nmethods: {\n  checkApproval(pass) {\n    axinst.get(`/check_approval/${pass._id}`)\n      .then(response => {\n        if (response.data.message === 'The pass is approved') {\n          this.approvalStatus = response.data.message;\n          this.unapprovedItems = [];\n\n        } else if (response.data.message === 'The pass is not fully approved') {\n          this.approvalStatus = '';\n          this.unapprovedItems = response.data.unapprovedItems;\n\n        } else {\n          this.approvalStatus = '';\n          this.unapprovedItems = [];\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        this.approvalStatus = '';\n        this.unapprovedItems = [];\n      });\n  },\n  getAllPasses() {\n    axinst.get('/passes') // Make a request to fetch all passes\n      .then(response => {\n        this.passes = response.data; // Store the passes in the data property\n        this.passes.forEach(pass => {\n            this.checkApproval(pass);\n          })\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n},\n\ncreated() {\n    this.getAllPasses(); // Call the method to fetch all passes when the component is created\n  }\n}\n</script>\n\n<style scoped>\n.success-message {\n  color: green;\n}\n\n.error-message {\n  color: red;\n}\n</style>\n\n\n<style scoped>\n\n</style>\n\n"],"mappings":"AAkBA,OAAOA,MAAK,MAAO,6BAA6B;AAEhD,eAAe;EACfC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,cAAc;MACtBC,cAAc,EAAE,EAAE;MAClBC,eAAe,EAAE,EAAE;MACnBC,MAAM,EAAE,EAAC,CAAG;IACd,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACPC,aAAaA,CAACC,IAAI,EAAE;MAClBT,MAAM,CAACU,GAAG,CAAE,mBAAkBD,IAAI,CAACE,GAAI,EAAC,EACrCC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACX,IAAI,CAACY,OAAM,KAAM,sBAAsB,EAAE;UACpD,IAAI,CAACV,cAAa,GAAIS,QAAQ,CAACX,IAAI,CAACY,OAAO;UAC3C,IAAI,CAACT,eAAc,GAAI,EAAE;QAE3B,OAAO,IAAIQ,QAAQ,CAACX,IAAI,CAACY,OAAM,KAAM,gCAAgC,EAAE;UACrE,IAAI,CAACV,cAAa,GAAI,EAAE;UACxB,IAAI,CAACC,eAAc,GAAIQ,QAAQ,CAACX,IAAI,CAACG,eAAe;QAEtD,OAAO;UACL,IAAI,CAACD,cAAa,GAAI,EAAE;UACxB,IAAI,CAACC,eAAc,GAAI,EAAE;QAC3B;MACF,CAAC,EACAU,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB,IAAI,CAACZ,cAAa,GAAI,EAAE;QACxB,IAAI,CAACC,eAAc,GAAI,EAAE;MAC3B,CAAC,CAAC;IACN,CAAC;IACDc,YAAYA,CAAA,EAAG;MACbnB,MAAM,CAACU,GAAG,CAAC,SAAS,EAAE;MAAA,CACnBE,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACP,MAAK,GAAIO,QAAQ,CAACX,IAAI,EAAE;QAC7B,IAAI,CAACI,MAAM,CAACc,OAAO,CAACX,IAAG,IAAK;UACxB,IAAI,CAACD,aAAa,CAACC,IAAI,CAAC;QAC1B,CAAC;MACL,CAAC,EACAM,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;EACF,CAAC;EAEDK,OAAOA,CAAA,EAAG;IACN,IAAI,CAACF,YAAY,EAAE,EAAE;EACvB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
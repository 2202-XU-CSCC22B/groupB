{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from '@/../server/axios-config.js';\nexport default {\n  name: \"FileInput\",\n  props: {\n    label: {\n      type: String,\n      required: true\n    },\n    passId: {\n      type: String,\n      required: true\n    },\n    onChange: {\n      type: Function,\n      required: true\n    },\n    maxFiles: {\n      type: Number,\n      default: 10\n    }\n  },\n  data() {\n    return {\n      selectedFiles: []\n    };\n  },\n  methods: {\n    async handleFileInput(event) {\n      const selectedFiles = Array.from(event.target.files);\n      const allowedTypes = [\"application/pdf\", \"application/vnd.ms-excel\", \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"image/jpeg\", \"image/png\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"];\n      const newFiles = selectedFiles.filter(file => allowedTypes.includes(file.type));\n      const invalidFiles = selectedFiles.filter(file => !allowedTypes.includes(file.type));\n      const invalidLength = this.selectedFiles.length + newFiles.length > this.maxFiles;\n      if (invalidLength) {\n        alert(`Please upload no more than ${this.maxFiles} files.`);\n      } else if (invalidFiles.length > 0) {\n        alert(\"Invalid file type.\");\n      } else {\n        this.selectedFiles.push(...newFiles);\n        const formData = new FormData();\n        newFiles.forEach(file => {\n          formData.append('file', file);\n        });\n        try {\n          const response = await axios.post(`/file/upload/${this.passId}`, formData);\n          console.log(response.data);\n          alert(`Successfully uploaded to pass ${this.passId}!`); // Handle the response from the server\n        } catch (error) {\n          console.error(error);\n          alert('File upload failed.');\n        }\n        const files = this.selectedFiles.map(file => file.name);\n        this.onChange(files);\n      }\n    },\n    removeFile(index) {\n      this.selectedFiles.splice(index, 1);\n      const files = this.selectedFiles.map(file => file.name);\n      this.onChange(files);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","label","type","String","required","passId","onChange","Function","maxFiles","Number","default","data","selectedFiles","methods","handleFileInput","event","Array","from","target","files","allowedTypes","newFiles","filter","file","includes","invalidFiles","invalidLength","length","alert","push","formData","FormData","forEach","append","response","post","console","log","error","map","removeFile","index","splice"],"sources":["/home/vagrant/sites/ppc/src/file_upload/FileInput.vue"],"sourcesContent":["<template>\n  <div>\n    <label>{{ label }}</label>\n    <div>\n      <input type=\"file\" multiple @change=\"handleFileInput\" />\n      <ul>\n        <li v-for=\"(file, index) in selectedFiles\" :key=\"file.name\">\n          {{ file.name }}\n          <button @click=\"removeFile(index)\">Remove</button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from '@/../server/axios-config.js';\n\nexport default {\n  name: \"FileInput\",\n  props: {\n    label: {\n      type: String,\n      required: true,\n    },\n    passId: {\n      type: String,\n      required: true,\n    },\n    onChange: {\n      type: Function,\n      required: true,\n    },\n    maxFiles: {\n      type: Number,\n      default: 10,\n    },\n  },\n  data() {\n    return {\n      selectedFiles: [],\n    };\n  },\n  methods: {\n    async handleFileInput(event) {\n      const selectedFiles = Array.from(event.target.files);\n      const allowedTypes = [\n        \"application/pdf\",\n        \"application/vnd.ms-excel\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"image/jpeg\",\n        \"image/png\",\n        \"application/msword\",\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      ];\n      const newFiles = selectedFiles.filter((file) =>\n        allowedTypes.includes(file.type)\n      );\n      const invalidFiles = selectedFiles.filter(\n        (file) => !allowedTypes.includes(file.type)\n      );\n      const invalidLength =\n        this.selectedFiles.length + newFiles.length > this.maxFiles;\n      if (invalidLength) {\n        alert(`Please upload no more than ${this.maxFiles} files.`);\n      } else if (invalidFiles.length > 0) {\n        alert(\"Invalid file type.\");\n      } else {\n        this.selectedFiles.push(...newFiles);\n        const formData = new FormData();\n        newFiles.forEach((file) => {\n          formData.append('file', file);\n        });\n        try {\n          const response = await axios.post(`/file/upload/${this.passId}`, formData);\n          console.log(response.data);\n          alert(`Successfully uploaded to pass ${this.passId}!`) // Handle the response from the server\n        } catch (error) {\n          console.error(error);\n          alert('File upload failed.');\n        }\n        const files = this.selectedFiles.map((file) => file.name);\n        this.onChange(files);\n      }\n    },\n    \n    removeFile(index) {\n      this.selectedFiles.splice(index, 1);\n      const files = this.selectedFiles.map((file) => file.name);\n      this.onChange(files);\n    },\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
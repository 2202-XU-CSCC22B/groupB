{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"label\", null, _toDisplayString($props.label), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    multiple: \"\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileInput && $options.handleFileInput(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedFiles, (file, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: file.name\n    }, [_createTextVNode(_toDisplayString(file.name) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeFile(index)\n    }, \"Remove\", 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$props","label","type","multiple","onChange","_cache","args","$options","handleFileInput","_Fragment","_renderList","$data","selectedFiles","file","index","key","name","onClick","$event","removeFile","_hoisted_1"],"sources":["/home/vagrant/sites/ppc/src/components/FileInput.vue"],"sourcesContent":["<template>\n  <div>\n    <label>{{ label }}</label>\n    <div>\n      <input type=\"file\" multiple @change=\"handleFileInput\" />\n      <ul>\n        <li v-for=\"(file, index) in selectedFiles\" :key=\"file.name\">\n          {{ file.name }}\n          <button @click=\"removeFile(index)\">Remove</button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"FileInput\",\n  props: {\n    label: {\n      type: String,\n      required: true,\n    },\n    onChange: {\n      type: Function,\n      required: true,\n    },\n    maxFiles: {\n      type: Number,\n      default: 10,\n    },\n  },\n  data() {\n    return {\n      selectedFiles: [],\n    };\n  },\n  methods: {\n    handleFileInput(event) {\n      const selectedFiles = Array.from(event.target.files);\n      const allowedTypes = [\n        \"application/pdf\",\n        \"application/vnd.ms-excel\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"image/jpeg\",\n        \"image/png\",\n        \"application/msword\",\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      ];\n      const newFiles = selectedFiles.filter((file) =>\n        allowedTypes.includes(file.type)\n      );\n      const invalidFiles = selectedFiles.filter(\n        (file) => !allowedTypes.includes(file.type)\n      );\n      const invalidLength =\n        this.selectedFiles.length + newFiles.length > this.maxFiles;\n      if (invalidLength) {\n        alert(`Please upload no more than ${this.maxFiles} files.`);\n      } else if (invalidFiles.length > 0) {\n        alert(\"Invalid file type.\");\n      } else {\n        this.selectedFiles.push(...newFiles);\n        const files = this.selectedFiles.map((file) => file.name);\n        this.onChange(files);\n      }\n    },\n    removeFile(index) {\n      this.selectedFiles.splice(index, 1);\n      const files = this.selectedFiles.map((file) => file.name);\n      this.onChange(files);\n    },\n  },\n};\n</script>\n"],"mappings":";;;uBACEA,mBAAA,CAWM,cAVJC,mBAAA,CAA0B,eAAAC,gBAAA,CAAhBC,MAAA,CAAAC,KAAK,kBACfH,mBAAA,CAQM,cAPJA,mBAAA,CAAwD;IAAjDI,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR,EAAQ;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;qCACpDR,mBAAA,CAKK,c,kBAJHD,mBAAA,CAGKY,SAAA,QAAAC,WAAA,CAHuBC,KAAA,CAAAC,aAAa,GAA7BC,IAAI,EAAEC,KAAK;yBAAvBjB,mBAAA,CAGK;MAHuCkB,GAAG,EAAEF,IAAI,CAACG;0CACjDH,IAAI,CAACG,IAAI,IAAG,GACf,iBAAAlB,mBAAA,CAAkD;MAAzCmB,OAAK,EAAAC,MAAA,IAAEX,QAAA,CAAAY,UAAU,CAACL,KAAK;OAAG,QAAM,iBAAAM,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}